[{"content":"Docker Networking 让我们先大致了解下 Docker Networking 默认 bridge 模式 通常 Docker 只负责当前同一 host/node 下的容器通信，不去暴露 container ip 给其他 host/node K8s 解决的问题之一就是不同 host/node 间的容器通信问题\nIP in Kubernetes node IP pod IP service IP 参考 Tutorial: Communication Is Key - Understanding Kubernetes Networking - Jeff Poole, Vivint Smart Home\n","date":"2021-02-19T00:00:00Z","image":"https://hukx.site/posts/brief-intro-to-networking-of-k8s-with-pictures/network_hu3d03a01dcc18bc5be0e67db3d8d209a6_41593_120x120_fill_q75_box_smart1.jpg","permalink":"https://hukx.site/posts/brief-intro-to-networking-of-k8s-with-pictures/","title":"图解 Kubernetes 网络"},{"content":"ORM实现组成  Model Manager QuerySet Query SQLCompiler Database backend  DATABASE BACKENDS  基类实现及支持的数据库的各自实现（django/db/models/backends） 具体采用的是哪种实现依据数据库配置里面的ENGINE ORM的底层行为的实现 介于Django与DB driver模块之间  Databasewrapper  django.db.backends.base.BaseDatabasewrapper，其他数据库的实现继承自该类，代表一条数据库连接 实现以下内容：  connection管理、cursor管理 事务管理 定义当前数据库类型下，Django field与column type的对应映射关系，Django operators与SQL之间的映射\u0026hellip;    DatabaseOperations  django.db.backends.base.operations.BaseDatabaseOperations, 封装不同数据库的不同SQL表达 eg: mysql   oracle   sql to flushes / sequence resets  DatabaseFeatures  django.db.backends.base.features.BaseDatabaseFeatures 当前数据库支持的操作  DatabaseCreation  django.db.backends.creation.BaseDatabaseCreation Encapsulate backend-specific differences pertaining to creation and destruction of the test database.  DatabaseIntrospection  django.db.backends.introspection.BaseDatabaseIntrospection inspectdb命令的实现  DatabaseSchemaEditor  django.db.backends.base.schema.BaseDatabaseSchemaEditor 用来做migrations  DatabaseClient  django.db.backends.base.client.BaseDatabaseClient dbshell命令的实现  SQLCompiler  django.db.models.sql.compiler.SQLCompiler 将Django Query实例转化为SQL SQLInsertCompiler/SQLDeleteCompliler/SQLUpdateCompiler/SQLAggregateCompiler Query.get_compiler() -\u0026gt; 调用DatabaseOperations.compiler() -\u0026gt; 通过DatabaseOperations.compiler_module找到SQLCompiler类 ==\u0026gt; 为该Query返回一个SQLCompiler实例  Query  django.db.models.sql.query 分为Query(普通ORM操作) / RawQuery(raw()) 包含与query相关的属性 包含select/tables/where/group_by/order_by/aggregates等 as_sql，生成SQL(self.get_compiler(connection=connection).as_sql()) query是一个树桩的数据结构，将他转变为SQL的过程包括遍历他的子节点，调用他们的as_sql方法，生成最终SQL  QuerySet  django.db.models.query.QuerySet Query实例的高层封装，提供用户使用的API 同时相当于一个查询到的记录集合的容器  Managers  django.db.models.manager.Manager Model.objects.xxx get_queryset()为当前model返回一个QuerySet, Model.objects.xxx \u0026ndash;\u0026gt; queryset.xxx do some custom\u0026hellip;    Models  the actual representation of the data and associated logic 一个Model类对应数据库中的一张表，model的每个field对应数据表中的一列 ModelBases: 所有model的元类  ","date":"2018-10-19T00:00:00Z","image":"https://hukx.site/posts/description-of-django-orm/orm_hudf531f8a2d258121f4004051d93f63b3_248402_120x120_fill_box_smart1_2.png","permalink":"https://hukx.site/posts/description-of-django-orm/","title":"Django ORM 剖析"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://hukx.site/posts/docker-virtual/","title":"图解 Docker 虚拟化"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://hukx.site/posts/brief-intro-to-arch-of-k8s-with-pictures/","title":"图解 Kubernetes 架构"}]