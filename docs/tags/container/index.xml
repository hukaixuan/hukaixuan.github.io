<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container on Hukx</title>
    <link>https://hukx.site/tags/container/</link>
    <description>Recent content in Container on Hukx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Hukx - All rights reserved</copyright>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hukx.site/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>图解 Linux Container 原理</title>
      <link>https://hukx.site/posts/docker-virtual/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hukx.site/posts/docker-virtual/</guid>
      <description>0. What is a container 容器（Containers）是基于几种 Linux 技术（如 Cgroups、Namespaces、Union filesystem）之上的抽象组合  
1. Control groups &amp;ldquo;limits how much you can use&amp;rdquo;
1.1 cgroups 能力  组织系统中的所有进程 负责收集资源使用信息 对资源使用进行限制或者区分优先级  1.2 Subsystems Control group 是一个抽象框架，Subsystems 是具体实现
subsystems 举例:  
2. Namespaces &amp;ldquo;limits what you can see&amp;rdquo;
2.1 Namespaces 能力  资源隔离的机制 在 namespace 内对资源的修改对当前 namespace 之外不可见 资源映射  2.2 可作 namespaces 的资源  Network Filesystem (mounts) Processes (pid) Inter-process communication (ipc) Hostname and domain name (uts) User and groups IDs cgroup  unshare</description>
    </item>
    
  </channel>
</rss>
