<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>图解系列 on Hukx</title>
    <link>https://hukx.site/tags/%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97/</link>
    <description>Recent content in 图解系列 on Hukx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Hukx - All rights reserved</copyright>
    <lastBuildDate>Fri, 19 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hukx.site/tags/%E5%9B%BE%E8%A7%A3%E7%B3%BB%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>图解 Kubernetes 网络</title>
      <link>https://hukx.site/posts/brief-intro-to-networking-of-k8s-with-pictures/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hukx.site/posts/brief-intro-to-networking-of-k8s-with-pictures/</guid>
      <description>Docker Networking 让我们先大致了解下 Docker Networking 默认 bridge 模式 通常 Docker 只负责当前同一 host/node 下的容器通信，不去暴露 container ip 给其他 host/node K8s 解决的问题之一就是不同 host/node 间的容器通信问题
IP in Kubernetes 下面大概介绍下 K8s 中的三大类 IP
 node IP  节点 IP，每个 K8s 节点都需要有一个 IP 地址 其实不属于 K8s 管理的范畴，通过其他方式分配，如：DHCP、手动配置、云厂商分配等   pod IP  一个 pod 里的多个 containers 共享同一个 network namespace 每个 pod 会被分配 IP 地址，通过你当前使用的 CNI(Container Network Interface) 插件的 IPAM 功能分配  最基本的方式是通过给每个 node 分配一段 IP 地址段，node 再在这个地址段中分配 IP 给其上的 pod 有些插件会动态分配 IP 段   kube-apiserver 通过启动参数 --cluster-cidr=172.</description>
    </item>
    
    <item>
      <title>图解 Docker 虚拟化</title>
      <link>https://hukx.site/posts/docker-virtual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hukx.site/posts/docker-virtual/</guid>
      <description></description>
    </item>
    
    <item>
      <title>图解 Kubernetes 架构</title>
      <link>https://hukx.site/posts/brief-intro-to-arch-of-k8s-with-pictures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hukx.site/posts/brief-intro-to-arch-of-k8s-with-pictures/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
